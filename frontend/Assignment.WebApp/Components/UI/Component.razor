@using Assignment.WebApp.Clients
@inject IApiAppClient ApiApp

<div class="container">
    <div class="row">
        <h2>YouTube Summariser</h2>
    </div>

    <div class="row">
        <div class="col">
            <div class="mb-3">
                <label for="YouTube Link" class="form-label"><strong>Add YouTube line here</strong></label>
                <input class="form-control" id="youtube-link" placeholder="Write your question here" @bind="question" />
            </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label for="question-language-code" class="form-label"><strong>Video Language</strong></label>
                <select class="form-select" id="video-language-code" aria-label="Video language code" @bind="questionLanguageCode">
                    <option value="en" selected>English</option>
                    <option value="ko">Korean</option>
                </select>
            </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label for="answer-language-code" class="form-label"><strong>Summary Language</strong></label>
                <select class="form-select" id="summary-language-code" aria-label="Summary language code" @bind="answerLanguageCode">
                    <option value="en" selected>English</option>
                    <option value="ko">Korean</option>
                </select>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="mb-3">
            <button type="button" id="summary" class="btn btn-primary" @onclick="AnswerAsync">Summary</button>
            <button type="button" class="btn btn-secondary" @onclick="ClearAsync">Clear!</button>
        </div>
    </div>

    <div class="row">
        <div class="mb-3">
            <label for="answer" class="form-label"><strong>Summary</strong></label>
            <textarea class="form-control" id="result" rows="10" placeholder="Result will show here" readonly>@answer</textarea>
        </div>
    </div>
</div>

@code {
    private string question = string.Empty;
    private string questionLanguageCode = "en";
    private string answerLanguageCode = "en";
    private string answer = string.Empty;

    private async Task AnswerAsync()
    {
        try
        {
            var result = await ApiApp.AnswerAsync(question, questionLanguageCode, answerLanguageCode);
            answer = result;
        }
        catch (Exception ex)
        {
            answer = ex.Message;
        }
    }

    private async Task ClearAsync()
    {
        question = string.Empty;
        questionLanguageCode = "en";
        answerLanguageCode = "en";
        answer = string.Empty;

        await Task.CompletedTask;
    }
}